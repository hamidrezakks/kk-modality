!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("react"),require("@material-ui/core"),require("lodash"),require("@material-ui/core/styles"),require("styled-components")):"function"==typeof define&&define.amd?define(["exports","react","@material-ui/core","lodash","@material-ui/core/styles","styled-components"],t):t((e=e||self)["kk-modality"]={},e.React,e.core,e.lodash,e.styles$1,e.styled)}(this,(function(e,t,n,i,o,s){"use strict";t=t&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t,s=s&&Object.prototype.hasOwnProperty.call(s,"default")?s.default:s;class r{constructor(){this.uniqueId=0,this.listeners={},this.newConfirmHandler=null,this.defaultOptions={cancelText:"Cancel",confirmText:"Confirm"}}static getInstance(){return this.instance||(this.instance=new r),this.instance}open(e,t){const n=i.merge(i.clone(this.defaultOptions),i.clone(e));this.uniqueId++;const o=this.uniqueId;n.id=o;let s=null,r=null;const a=new Promise(((e,t)=>{s=e,r=t}));return n.resolve=s,n.reject=r,n.cb=t,this.listeners[o]={dialog:n,id:o,reject:r,resolve:s,cb:t},this.newConfirmHandler&&this.newConfirmHandler(n),a}setNewConfirmListener(e){this.newConfirmHandler=e}removeListener(e){delete this.listeners[e]}}const a=s.div`
    position: relative;  
    height: 16px;
    
    &:after {
        content: '';
        height: 4px;
        width 36px;
        background-color: #ccc;
        border-radius: 4px;
        position: absolute;
        top: 60%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
`;class l extends t.Component{constructor(e){super(e),this.newConfirmDialogHandler=e=>{const{modalList:t,queueSize:n}=this.state;e.open=!1,t.length>n&&this.actionHandler(t[0].id,"cancel")(),e.force?t.push(e):t.unshift(e);const o=e.id;this.setState({modalList:t},(()=>{const e=this.state.modalList,t=i.findIndex(e,{id:o});t>-1&&(e[t].open=!0,this.setState({modalList:e}))}))},this.actionHandler=(e,t)=>()=>{const{modalList:n}=this.state;if(0===n.length)return;const o=i.findIndex(n,{id:e});if(-1===o)return;const s=n[o];try{s.resolve(t)}catch(e){s.reject(e)}if(s.cb)try{s.cb(t)}catch(e){console.warn(e)}let r=!1;if("cancel"===t)r=!1;else if("confirm"===t&&s.confirmPreventClose)r=!0;else if(s.buttons){const e=i.find(s.buttons,{action:t});e&&e.preventClose&&e.action===t&&(r=!0)}n[o].open=r,this.setState({modalList:n},(()=>{r||(this.confirmService.removeListener(s.id),setTimeout((()=>{const t=this.state.modalList;-1!==i.findIndex(t,{id:e})&&(t.splice(o,1),this.setState({modalList:t}))}),(this.props.dialogTransitionDuration||200)+1))}))},this.drawerOpenHandler=()=>{},this.state={modalList:[],queueSize:e.queueSize||5},this.confirmService=r.getInstance()}static getDerivedStateFromProps(e,t){return{queueSize:e.queueSize||5}}componentDidMount(){this.confirmService.setNewConfirmListener(this.newConfirmDialogHandler)}render(){const{fullScreen:e,hideDrawerAnchor:i}=this.props,{modalList:o}=this.state;return e?o.map((e=>t.createElement(n.SwipeableDrawer,{key:e.id,anchor:"bottom",open:e.open||!1,onClose:this.actionHandler(e.id,"cancel"),onOpen:this.drawerOpenHandler,transitionDuration:this.props.dialogTransitionDuration||200,className:"kk-modality-bottom-drawer",classes:Object.assign({paper:this.props.classes.drawerPaper},this.props.drawerClasses)},Boolean(!0!==i)&&t.createElement(a,{className:"kk-modality-drawer-anchor"}),this.getContact(e)))):o.map((e=>t.createElement(n.Dialog,Object.assign({key:e.id,transitionDuration:this.props.dialogTransitionDuration||200,open:e.open||!1,onClose:this.actionHandler(e.id,"cancel"),classes:this.props.dialogClasses},e.dialogProps),this.getContact(e))))}getContact(e){return t.createElement(t.Fragment,null,e.title&&t.createElement(n.DialogTitle,null,e.title),e.description&&t.createElement(n.DialogContent,null,t.createElement(n.DialogContentText,null,e.description)),t.createElement(n.DialogActions,null,Boolean(e.cancelText)&&t.createElement(n.Button,Object.assign({color:"secondary"},e.cancelProps,{onClick:this.actionHandler(e.id,"cancel")}),e.cancelText),Boolean(e.confirmText)&&t.createElement(n.Button,Object.assign({color:"primary"},e.confirmProps,{onClick:this.actionHandler(e.id,"confirm")}),e.confirmText),this.getButtonsContent(e)))}getButtonsContent(e){return e.buttons&&0!==e.buttons.length?e.buttons.map(((i,o)=>t.createElement(n.Button,Object.assign({key:o},i.props,{onClick:this.actionHandler(e.id,i.action)}),i.text))):null}}var c=n.withMobileDialog({breakpoint:"xs"})(o.withStyles({drawerPaper:{borderRadius:"12px 12px 0 0"}})(l));e.Modality=c,e.ModalityService=r,Object.defineProperty(e,"__esModule",{value:!0})}));
