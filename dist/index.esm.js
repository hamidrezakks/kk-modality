import e from"react";import{withMobileDialog as t,SwipeableDrawer as n,Dialog as i,DialogTitle as s,DialogContent as o,DialogContentText as r,DialogActions as a,Button as c}from"@material-ui/core";import{clone as l,merge as d,findIndex as m,find as h}from"lodash";import{withStyles as p}from"@material-ui/core/styles";import u from"styled-components";class f{constructor(){this.uniqueId=0,this.listeners={},this.newConfirmHandler=null,this.defaultOptions={cancelText:"Cancel",confirmText:"Confirm"}}static getInstance(){return this.instance||(this.instance=new f),this.instance}open(e,t){const n=l(d(l(this.defaultOptions),l(e)));this.uniqueId++;const i=this.uniqueId;n.id=i;let s=null,o=null;const r=new Promise(((e,t)=>{s=e,o=t}));return n.resolve=s,n.reject=o,n.cb=t,this.listeners[i]={dialog:n,id:i,reject:o,resolve:s,cb:t},this.newConfirmHandler&&this.newConfirmHandler(n),r}setNewConfirmListener(e){this.newConfirmHandler=e}removeListener(e){delete this.listeners[e]}}const g=u.div`
    position: relative;  
    height: 16px;
    
    &:after {
        content: '';
        height: 4px;
        width 36px;
        background-color: #ccc;
        border-radius: 4px;
        position: absolute;
        top: 60%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
`;class C extends e.Component{constructor(e){super(e),this.newConfirmDialogHandler=e=>{const{modalList:t,queueSize:n}=this.state;e.open=!1,t.length>n&&this.actionHandler(t[0].id,"cancel")(),e.force?t.push(e):t.unshift(e);const i=e.id;this.setState({modalList:t},(()=>{const e=this.state.modalList,t=m(e,{id:i});t>-1&&(e[t].open=!0,this.setState({modalList:e}))}))},this.actionHandler=(e,t)=>()=>{const{modalList:n}=this.state;if(0===n.length)return;const i=m(n,{id:e});if(-1===i)return;const s=n[i];try{s.resolve(t)}catch(e){s.reject(e)}if(s.cb)try{s.cb(t)}catch(e){console.warn(e)}let o=!1;if("cancel"===t)o=!1;else if("confirm"===t&&s.confirmPreventClose)o=!0;else if(s.buttons){const e=h(s.buttons,{action:t});e&&e.preventClose&&e.action===t&&(o=!0)}n[i].open=o,this.setState({modalList:n},(()=>{o||(this.confirmService.removeListener(s.id),setTimeout((()=>{const t=this.state.modalList;-1!==m(t,{id:e})&&(t.splice(i,1),this.setState({modalList:t}))}),(this.props.dialogTransitionDuration||200)+1))}))},this.drawerOpenHandler=()=>{},this.state={modalList:[],queueSize:e.queueSize||5},this.confirmService=f.getInstance()}static getDerivedStateFromProps(e,t){return{queueSize:e.queueSize||5}}componentDidMount(){this.confirmService.setNewConfirmListener(this.newConfirmDialogHandler)}render(){const{fullScreen:t,hideDrawerAnchor:s}=this.props,{modalList:o}=this.state;return t?o.map((t=>e.createElement(n,{key:t.id,anchor:"bottom",open:t.open||!1,onClose:this.actionHandler(t.id,"cancel"),onOpen:this.drawerOpenHandler,transitionDuration:this.props.dialogTransitionDuration||200,className:"kk-modality-bottom-drawer",classes:Object.assign({paper:this.props.classes.drawerPaper},this.props.drawerClasses)},Boolean(!0!==s)&&e.createElement(g,{className:"kk-modality-drawer-anchor"}),this.getContact(t)))):o.map((t=>e.createElement(i,Object.assign({key:t.id,transitionDuration:this.props.dialogTransitionDuration||200,open:t.open||!1,onClose:this.actionHandler(t.id,"cancel"),classes:this.props.dialogClasses},t.dialogProps),this.getContact(t))))}getContact(t){return e.createElement(e.Fragment,null,t.title&&e.createElement(s,null,t.title),t.description&&e.createElement(o,null,e.createElement(r,null,t.description)),e.createElement(a,null,Boolean(t.cancelText)&&e.createElement(c,Object.assign({color:"secondary"},t.cancelProps,{onClick:this.actionHandler(t.id,"cancel")}),t.cancelText),Boolean(t.confirmText)&&e.createElement(c,Object.assign({color:"primary"},t.confirmProps,{onClick:this.actionHandler(t.id,"confirm")}),t.confirmText),this.getButtonsContent(t)))}getButtonsContent(t){return t.buttons&&0!==t.buttons.length?t.buttons.map(((n,i)=>e.createElement(c,Object.assign({key:i},n.props,{onClick:this.actionHandler(t.id,n.action)}),n.text))):null}}var b=t({breakpoint:"xs"})(p({drawerPaper:{borderRadius:"12px 12px 0 0"}})(C));export{b as Modality,f as ModalityService};
